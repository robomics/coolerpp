# Copyright (C) 2023 Roberto Rossini (roberros@uio.no)
# SPDX-License-Identifier: MIT

name: Windows CI

on:
  push:
    branches: [ main ]
    paths:
      - ".github/workflows/windows-ci.yml"
      - "cmake/**"
      - "examples/**"
      - "src/**"
      - "test/**"
      - "CMakeLists.txt"
      - "conanfile.py"
    tags:
      - 'v*.*.*'

  pull_request:
    paths:
      - ".github/workflows/windows-ci.yml"
      - "cmake/**"
      - "examples/**"
      - "src/**"
      - "test/**"
      - "CMakeLists.txt"
      - "conanfile.py"

# https://stackoverflow.com/a/72408109
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CONAN_REVISIONS_ENABLED: "1"
  CONAN_USER_HOME: "${{ github.workspace }}/conan-cache"
  CONAN_USER_HOME_SHORT: "${{ github.workspace }}/conan-cache/short"
  CONAN_V2_MODE: "1"

defaults:
  run:
    shell: bash

jobs:
  build-project:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3

      - name: Generate requirements.txt for pip
        run: |
          echo 'conan==1.59.*' > requirements.txt

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install deps with PIP
        run: |
          pip install -r requirements.txt

      - name: Cache Conan packages
        id: cache-conan
        uses: actions/cache@v3
        with:
          key: conan-${{ hashFiles('conanfile.py', '.github/workflows/windows-ci.yml') }}
          path: ${{ env.CONAN_USER_HOME }}

      - name: Clean Conan cache (pre-build)
        if: steps.cache-conan.outputs.cache-hit != 'true'
        run: |
          mkdir -p build
          conan remove -f "*" --builds
          conan remove -f "*" --src
          conan remove -f "*" --system-reqs

      - name: Install build dependencies
        working-directory: ${{ github.workspace }}/build
        run: |
          conan install ../conanfile.py \
             --build outdated           \
             -s runtime_type=Release    \
             -s compiler.cppstd=17

      - name: Configure project
        run: |
          cmake -DCMAKE_BUILD_TYPE=Release   \
                -DENABLE_DEVELOPER_MODE=OFF  \
                -DCOOLERPP_ENABLE_TESTING=ON \
                -DCOOLERPP_BUILD_EXAMPLES=ON \
                -S .                         \
                -B build

      - name: Clean Conan cache (post-build)
        if: steps.cache-conan.outputs.cache-hit != 'true'
        run: |
          conan remove -f "*" --builds
          conan remove -f "*" --src
          conan remove -f "*" --system-reqs
          conan remove -f "*" --outdated

      - name: Build project
        run: cmake --build build --config Release

      - name: Run unit tests
        run: |
          ctest --test-dir build    \
                --schedule-random   \
                --no-tests=error    \
                --timeout 240

  windows-ci-status-check:
    name: Status Check (Windows CI)
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs:
      - build-project

    steps:
      - name: Collect job results
        if: needs.build-project.result != 'success'
        run: exit 1
